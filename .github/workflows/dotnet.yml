name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '3.1.x' # SDK Version to use; x will use the latest version of the 3.1 channel
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Run Test and Test Report 
      uses: zyborg/dotnet-tests-report@v1
      with:
          project_path: CRMTests
          report_name:  SimpleCRM_test_metrics
          report_title: SimpleCRM test metrics
          github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Produce the coverage report
      uses: insightsengineering/coverage-action@v2
      with:
          # Path to the Cobertura XML report.
          path: ./.coverage/**/coverage.cobertura.xml
          # Minimum total coverage, if you want to the
          # workflow to enforce it as a standard.
          # This has no effect if the `fail` arg is set to `false`.
          threshold: 80.123
          # Fail the workflow if the minimum code coverage
          # reuquirements are not satisfied. (Steeves: put back to true after)
          fail: false
          # Publish the rendered output as a PR comment
          publish: true
          # Create a coverage diff report.
          diff: true
          # Branch to diff against.
          # Compare the current coverage to the coverage
          # determined on this branch.
          diff-branch: main
          # This is where the coverage reports for the
          # `diff-branch` are stored.
          # Branch is created if it doesn't already exist'.
          diff-storage: _xml_coverage_reports  

    - name: Upload coverage report artifact
      uses: actions/upload-artifact@v2.2.3
      with:
        name: CoverageReport # Artifact name        
        path: ./coverage # Directory containing files to upload
    - name: Add Coverage PR Comment
      uses: marocchino/sticky-pull-request-comment@v2
      if: github.event_name == 'pull_request'
      with:
         recreate: true
         path: code-coverage-results.md