name: .NET

on:
  push:
    branches: [ "dev-jest" ]
  pull_request:
    branches: [ "dev" ]
    types: [closed]
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug

jobs:
  build:
  
    runs-on: windows-latest

    steps:
    
    - uses: actions/checkout@v3
    - name: Build
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.0.x'
        dotnet-quality: 'preview'
    - run: dotnet build CRMRestApiV2\CRMRestApiV2.csproj --configuration Release
    
    
    - name: Install Azurite
      id: azuright
      uses: potatoqualitee/azuright@v1.1
      
    #- name: Dotnet XUnit test run 🧪 🧪
    #  run: dotnet test --no-build --verbosity normal --collect:"XPlat Code Coverage" --logger trx --results-directory coverage
   
    #- name: Process trx reports to obtain summary on (pull-requests)
    #  if: always()
    #  uses: im-open/process-dotnet-test-results@v2.1.3
    #  with:
    #      github-token: ${{ secrets.GITHUB_TOKEN }}
    
    #- name: Test Report (Summary)
    #  uses: dorny/test-reporter@v1
    #  if: always()
    #  with:
    #    name: xUnit Test Run
    #    path: "**/coverage/*.trx"                            
    #    reporter: dotnet-trx
    #    fail-on-error: true    
      
    - name: dotnet publish
      run: dotnet publish CRMRestApiV2\CRMRestApiV2.csproj -c Release  -p:PublishSingleFile=true --self-contained true --runtime win-x64
    
        
    - name: Start dotNet Customers Microservice 
      run: CRMRestApiV2\bin\Release\net6.0\win-x64\publish\CRMRestApiV2.exe
    
      
    - name: npm install, build, and test (jest)
      run: |
        npm ci
        npm test
        npm run build --if-present
        npm start & npx wait-on http://localhost:3000
      working-directory: .\simplecrmweb     
      env:
        CI: true
       
            
    - name: E2E on Chrome 🧪
      uses: cypress-io/github-action@v4
      with:
           working-directory: .\simplecrmweb
           browser: chrome   
        
    
#sepearate here for jets coverage
  coverage:
        runs-on: ubuntu-latest
        needs: build
        steps:
            - uses: actions/checkout@v3
            - uses: ArtiomTr/jest-coverage-report-action@v2
              id: coverage
              with:
                  output: report-markdown
                  working-directory: ./simplecrmweb
            - uses: marocchino/sticky-pull-request-comment@v2
              with:
                  message: ${{ steps.coverage.outputs.report }}
            - name: ReportGenerator
              uses: danielpalme/ReportGenerator-GitHub-Action@5.1.4
              with:
                reports: 'coverage/*/coverage.cobertura.xml' # REQUIRED # The coverage reports that should be parsed (separated by semicolon). Globbing is supported.
                targetdir: 'coveragereport' # REQUIRED # The directory where the generated report should be saved.
                reporttypes: 'HtmlInline;Cobertura' # The output formats and scope (separated by semicolon)

            - name: Upload coverage report artifact
              uses: actions/upload-artifact@v2.2.3
              with:
                name: CoverageReport # Artifact name        
                path: coveragereport # Directory containing files to upload  
    
            - name: Code Coverage Summary Report
              uses: irongut/CodeCoverageSummary@v1.3.0
              with:
                filename: coveragereport/Cobertura.xml
                badge: true
                format: 'markdown'
                output: 'both'

            - name: Add Coverage PR Comment
              uses: marocchino/sticky-pull-request-comment@v2
              if: github.event_name == 'pull_request'
              with:
                recreate: true
                path: code-coverage-results.md

            - name: Write to Job Summary
              run: cat code-coverage-results.md >> $GITHUB_STEP_SUMMARY          
       
    