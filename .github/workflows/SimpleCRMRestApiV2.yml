name: Build and deploy .NET Core application to Web App SimpleCRMRestApiV2 with API Management Service SimpleApiV2api-CRMRestApiV2
on:
  push:
    branches:
    - dev-jest
    - main
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'info'
        type: choice
        options:
        - info
        - warning
        - debug
env:
  AZURE_WEBAPP_NAME: SimpleCRMRestApiV2
  AZURE_WEBAPP_PACKAGE_PATH: CRMRestApiV2/publish
  AZURE_APIM_RESOURCE_PATH: /api
  AZURE_APIM_RESOURCEGROUP: SimpleCRMResourceGroup
  AZURE_APIM_SERVICENAME: SimpleApiV2api
  AZURE_APIM_API_ID: CRMRestApiV2
  AZURE_APIM_APPSERVICEURL: https://simplecrmrestapiv2.azurewebsites.net
  SWASHBUCLE_ASPNET_CORE_CLI_PACKAGE_VERSION: 6.4.0
  SWASHBUCKLE_DOTNET_CORE_VERSION: 6.0.x
  API_IMPORT_SPECIFICATION_PATH: CRMRestApiV2/publish/swagger.json
  API_IMPORT_DLL: CRMRestApiV2/bin/Release/net6.0/CRMRestApiV2.dll
  API_IMPORT_VERSION: v1
  CONFIGURATION: Debug
  DOTNET_CORE_VERSION: 6.0.x
  WORKING_DIRECTORY: CRMRestApiV2
  TEST_DIRECTORY: ${GITHUB_WORKSPACE}\CRMTests
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_CORE_VERSION }}
    - name: Setup SwashBuckle .NET Core
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: ${{ env.SWASHBUCKLE_DOTNET_CORE_VERSION }}
    - name: Restore
      run: dotnet restore ${{ env.WORKING_DIRECTORY }}
    - name: Install Swashbuckle.AspNetCore.Cli for post build event to generate swagger.json
      run: dotnet tool install --local Swashbuckle.AspNetCore.Cli --version 6.4.0 
    - name: Build
      run: dotnet build ${{ env.WORKING_DIRECTORY }} --configuration ${{ env.CONFIGURATION }} --no-restore
    - name: Test
      run: dotnet test ${{ env.WORKING_DIRECTORY }} --no-build
      # Use JMeter to run all tests in a folder
      # Modify the logging level and pass in some custom properties and config
    - name: Run All JMeter Tests In tests Folder 🧪
      uses: rbhadti94/apache-jmeter-action@v0.5.0
      with:
         testFilePath: ${{ env.TEST_DIRECTORY }}/performance
         outputReportsFolder: ${GITHUB_WORKSPACE}/reports/
         args: "--loglevel INFO "
    
    #TODO : fix
    #- name: Generating XUnit Report
    #  uses: AutoModality/action-xunit-viewer@v1  
    #- name: Attach the report
    #  uses: actions/upload-artifact@v1
    #  with:
    #     name: ${{ steps.xunit-viewer.outputs.report-name }}
    #     path: ${{ steps.xunit-viewer.outputs.report-dir }}
    - name: Publish
      run: dotnet publish ${{ env.WORKING_DIRECTORY }} --configuration ${{ env.CONFIGURATION }} --no-build --output ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
    - name: Publish Artifacts
      uses: actions/upload-artifact@v1.0.0
      with:
        name: webapp
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
  #deploy:
  #  runs-on: windows-latest
  #  needs: build
  #  steps:
  #  - name: Download artifact from build job
  #    uses: actions/download-artifact@v2
  #    with:
  #      name: webapp
  #      path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
  #  - name: Deploy to Azure WebApp
  #    uses: azure/webapps-deploy@v2
  #    with:
  #      app-name: ${{ env.AZURE_WEBAPP_NAME }}
  #      package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
  #      publish-profile: ${{ secrets.SimpleCRMRestApiV2_FFFF }}
  #  - name: Azure Login
  #    uses: azure/login@v1
  #    with:
  #      creds: '${{ secrets.AZURE_CREDENTIALS }}'
  #  - name: Import API into Azure API Management
  #    run: az apim api import --path "${{ env.AZURE_APIM_RESOURCE_PATH }}" --resource-group "${{ env.AZURE_APIM_RESOURCEGROUP }}" --service-name "${{ env.AZURE_APIM_SERVICENAME }}" --api-id "${{ env.AZURE_APIM_API_ID }}" --service-url "${{ env.AZURE_APIM_APPSERVICEURL }}" --specification-path "${{ env.API_IMPORT_SPECIFICATION_PATH }}" --specification-format OpenApi --subscription-required false
  #  - name: logout
  #    run: >
  #      az logout
